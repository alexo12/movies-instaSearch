{"version":3,"sources":["components/Hit.js","App.js","index.js","assets/img/movieIcon-150x150.png","assets/img/trianglify-background3.svg"],"names":["useState","React","useEffect","Hit","props","_props$hit","hit","image","actor_facets","title","year","genre","rating","score","actors","_useState","_useState2","Object","slicedToArray","moviePoster","setMoviePoster","_useState3","_useState4","hasActorImgs","setHasActorImgs","_useState5","_useState6","actorsList","setActorsList","_useState7","_useState8","open","setOpen","toggleModal","validate","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","actorsArr","numOfActors","i","actorImg","actorName","wrap","_context","prev","next","defaultMovieImg","length","endsWith","split","push","react","className","key","src","alt","stop","apply","this","arguments","onClick","onError","Modal","onClose","aria-labelledby","aria-describedby","Box","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","class","x1","y1","x2","y2","map","concat","toFixed","replace","Array","Math","floor","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","searchClient","algoliasearch","App","style","backgroundImage","background","backgroundPosition","InstantSearch","indexName","ClearRefinements","RefinementList","attribute","RatingMenu","Configure","hitsPerPage","SearchBox","Stats","Hits","hitComponent","Pagination","ReactDOM","render","react_default","createElement","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d5bee6c1.chunk.js","sourcesContent":["/* eslint-disable react/jsx-key */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport defaultMovieImg from '../assets/img/movieIcon-150x150.png';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport urlExist from 'url-exist';\nimport PropTypes from 'prop-types';\nconst { useState, useEffect } = React;\n\nconst Hit = props => {\n  let {image, actor_facets, title, year, genre, rating, score, actors} = props.hit;\n  const [moviePoster, setMoviePoster] = useState(image)\n  const [hasActorImgs, setHasActorImgs] = useState(false);\n  const [actorsList, setActorsList] = useState(false);\n  const [open, setOpen] = useState(false);\n  const toggleModal = () => open ? setOpen(false) : setOpen(true);\n\n  const validate = async () => {\n    if (!moviePoster) setMoviePoster(defaultMovieImg);\n    const actorsArr = [];\n    const numOfActors = actor_facets.length >= 4 ? 4 : actor_facets.length;\n    for(let i = 0; i < numOfActors; i++) {\n      if(actor_facets[i]) {\n        const actorImg = actor_facets[i].endsWith(actors[i]) ? actor_facets[i].split('|')[0] : actor_facets[i];\n        const actorName = actors[i];\n        actorsArr.push(\n          <div className=\"col-6 col-md-3 text-center\" key={actorName}>\n            <img src={actorImg} alt={actorName} className=\"actorImg\" />\n            <p className=\"actor-name\">{actorName}</p>\n          </div>\n        )\n      }\n    }\n    if(actorsArr.length) {\n      setHasActorImgs(true);\n      setActorsList(actorsArr)\n    };\n  }\n  useEffect(() => {\n    validate();\n  }, []);\n\n  return (\n    <div className={`row movie-item`} onClick={toggleModal}>\n      <div className={'col-12'}>\n        <img src={moviePoster} onError={defaultMovieImg} className=\"movieImg\" alt=\"\" />\n        <div className=\"hit-name pt-2\">\n          <span>{title}</span>\n        </div>\n        <div className=\"hit-description whiteThemeText hit-year\">\n          {year}\n        </div>\n      </div>\n      <Modal open={open} onClose={toggleModal} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n        <Box className=\"movieModal rounded\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"col-2 feather feather-x d-flex\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/></svg>\n          <div className=\"row\">\n            <img src={moviePoster} className=\"modalMovieImg mx-auto d-none d-md-block\" alt=\"\" />\n            <div className='col-12 text-center'>\n                <div className=\"hit-name pt-2\">\n                  <h2>{title}</h2>\n                </div>\n                <div className='genres'>{genre.map(genre => <span className=\"badge m-1 genre\">{genre}</span>)}</div>\n              <div>\n                <p className=\"score\">Audience Score: {`${score.toFixed(1).replace('.', '')}%`}</p>            \n                <span>\n                  {Array(Math.floor(rating)).fill(<i className=\"fa fa-star\"></i>)}\n                  {(rating) - Math.floor(rating) === 0 ? ('') : (<i className=\"fa fa-star-half\"></i>)}\n                </span>\n              </div>\n            </div>\n            <div className='col-12 mt-3'>\n              {hasActorImgs &&\n                <><h3 className={\"whiteThemeText\"}>Lead Roles</h3>\n                <div className={'row d-flex justify-content-center'}>{actorsList}</div></> \n              }\n            </div>\n          </div>\n        </Box>\n      </Modal>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={`col-3 feather feather-info d-none`}><circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"/><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"/></svg>\n    </div>\n  );\n};\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\nexport default Hit;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport algoliasearch from 'algoliasearch';\nimport './App.css';\nimport Hit from './components/Hit';\nimport background from './assets/img/trianglify-background3.svg';\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Pagination,\n  ClearRefinements,\n  RefinementList,\n  Configure,\n  RatingMenu,\n  Stats,\n} from 'react-instantsearch-dom';\nconst searchClient = algoliasearch(\n  'JRBX2JXPHI',\n  '7df769ad16fb515f00e00ae86c2a2222'\n);\n\n// Create the App component\nconst App = () => {\n  return (\n    <div>\n      <header\n        className={`p-4 w-100`}\n        style={{backgroundImage: `url(${background})`, backgroundPosition: `bottom`}}>\n        <div className={`container`}>\n          <div className={`row`}>\n            <div className={`col-md-6 mx-auto`}>\n              <h3 className={`text-white text-center text-uppercase tommy-font`}>\n                Movie Database\n              </h3>\n            </div>\n          </div>\n        </div>\n      </header>\n      <div className=\"ais-InstantSearch container-fluid\">\n        <InstantSearch indexName=\"movies\" searchClient={searchClient}>\n          <div className=\"left-panel\">\n            <div className=\"mt-3\">\n              <ClearRefinements />\n            </div>\n            <h4 className=\"mt-2 mt-md-5 mb-1 whiteThemeText\">Genres</h4>\n            <RefinementList attribute=\"genre\" />\n            <h4 className=\"mt-2 mt-md-5 mb-1 whiteThemeText\">Ratings</h4>\n            <RatingMenu attribute=\"rating\" />\n            <Configure hitsPerPage={15} />\n          </div>\n          <div className=\"right-panel\">\n            <SearchBox />\n            <Stats />\n            <Hits hitComponent={Hit} />\n            <Pagination />\n          </div>\n        </InstantSearch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/movieIcon-150x150.71dfdf62.png\";","module.exports = __webpack_public_path__ + \"static/media/trianglify-background3.4670e96c.svg\";"],"sourceRoot":""}