{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alex_otero/Documents/personal-projects/algolia/movies-instasearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alex_otero/Documents/personal-projects/algolia/movies-instasearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport isUrl from \"is-url-superb\";\nimport ky from \"ky-universal\";\n\nvar urlExist = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof url !== \"string\")) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new TypeError(\"Expected a string, got \".concat(typeof url));\n\n          case 2:\n            if (isUrl(url)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            _context.next = 6;\n            return ky.head(url, {\n              throwHttpErrors: false\n            });\n\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response !== undefined && (response.status < 400 || response.status >= 500));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function urlExist(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default urlExist;","map":null,"metadata":{},"sourceType":"module"}